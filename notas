
Show comands all knex
  npx knex

Create new migration:
  npx knex migrate:make create_nameMigration

Execute a migrations:
  npx knex migrate:latest

Go back state previous of migration
  npx knex migrate:rollback

Show migrations executeds
  npx knex migrate:status


#Dica - Informações de autenticação, de qual usuario está logado em nosso app,
deve vir no cabeçalho da requisição. Sendo assim, para identificar o o usuario 
que esta realizando o cadastro de um caso, devemos buscar o id desse usuario no 
cabeçalho, pois não é uma boa pratica mandar esse id pelos paramtro ou no corpo da 
requisição.

#Dica - Durante o projeto foi usado um package de icons chamada de "fathericons".

#Dica - Utilizar o "Intl" para formatação de de valores na exibição

#Dica - Para ajustar logo e tira-la de baixo da status bar, utilizamos a biblioteca 
"expo-constants". Comand: expo install expo-constants;
  -Logo em seguida importamos e usamos na page "Incidents";

#Dica - Implementando acessso ao email pelo app
 - Para isso utilizaremos uma biblioteca do próprio expo chamada de "expo-mail-composer"


 #Dica_!Important : 
    ! - Para formatar valores em nosso app utilizaremos a biblioteca chamada "intl",
    basta instala-la, Comand "yarn add intl".
    ! - Deverá importar essa lib em nosso file "App.js", porque assim todo o nosso app 
    conseguira utiliza-la: "import 'intl' ".
    ! - Logo em seguida será preciso importar o nosso idioma de dentro dessa lib da 
    seguinte forma: " import 'intl/locale-data/jsonp/pt-BR' "


  #Tópicos Avançados:
  Implementando Validações:
    - Para isso iremo utilizar um a lib chamada de celebrate, que vai nos ajudar a realizar
    as nossas validações aqui no backend. Comand >> yarn add celebrate

  Iniciando com o JEST:
    Logo após adiciona-lo ao seu projeto(' yarn add jest');
    Iremos executar o init do jest >> npx jest --init

    #Tipos de testes com o Jest:
      - Unitários: Testa um pedaço da aplicação de uma forma muito isolado. Geralmente ele
      testa uma função que executa lago bem especifico. 
      Também possuí a característica de que não irá ter nenhum efeito colateral(side effect); 

      -Integração:São testes para testar um fluxo de uma rota inteira da nossa aplicação.
      Esse teste testa por completo uma funcionalidade.

  Testes de Integração:
   - Em nossos testes de interção realizaremos chamdas em nossa propria api,
   e como não é recomendado utilizar o axios para nossos test, utilizaremos
   uma lib chamada "supertest"; Comand >> "yarn add supertest"
   - 